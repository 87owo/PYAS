from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
import PYAS_Resource

class Ui_main_window(object):
    def setupUi(self, main_window):
        if not main_window.objectName():
            main_window.setObjectName(u"main_window")
        main_window.resize(900, 590)
        font = QFont()
        font.setFamilies([u"Microsoft YaHei"])
        font.setPointSize(10)
        font.setStyleStrategy(QFont.PreferAntialias)
        main_window.setFont(font)
        main_window.setFocusPolicy(Qt.TabFocus)
        icon = QIcon()
        icon.addFile(u":/icon/logo_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        main_window.setWindowIcon(icon)
        main_window.setIconSize(QSize(512, 512))
        main_window.setToolButtonStyle(Qt.ToolButtonIconOnly)
        main_window.setDocumentMode(False)
        self.main_widget = QWidget(main_window)
        self.main_widget.setObjectName(u"main_widget")
        self.main_widget.setFont(font)
        self.main_widget.setStyleSheet(u"")
        self.scan_window = QWidget(self.main_widget)
        self.scan_window.setObjectName(u"scan_window")
        self.scan_window.setGeometry(QRect(80, 60, 810, 520))
        self.scan_window.setFont(font)
        self.scan_window.setLayoutDirection(Qt.LeftToRight)
        self.scan_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.method_window = QWidget(self.scan_window)
        self.method_window.setObjectName(u"method_window")
        self.method_window.setGeometry(QRect(690, 70, 80, 90))
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.method_window.sizePolicy().hasHeightForWidth())
        self.method_window.setSizePolicy(sizePolicy)
        font1 = QFont()
        font1.setPointSize(10)
        self.method_window.setFont(font1)
        self.method_window.setLayoutDirection(Qt.LeftToRight)
        self.method_window.setStyleSheet(u"QWidget { background-color: rgb(235, 235, 235); border-radius: 10px; }\n"
"")
        self.file_button = QPushButton(self.method_window)
        self.file_button.setObjectName(u"file_button")
        self.file_button.setGeometry(QRect(0, 0, 80, 30))
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Minimum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.file_button.sizePolicy().hasHeightForWidth())
        self.file_button.setSizePolicy(sizePolicy1)
        self.file_button.setFont(font)
        self.file_button.setFocusPolicy(Qt.StrongFocus)
        self.file_button.setLayoutDirection(Qt.LeftToRight)
        self.file_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.file_button.setIconSize(QSize(16, 16))
        self.file_button.setCheckable(False)
        self.path_button = QPushButton(self.method_window)
        self.path_button.setObjectName(u"path_button")
        self.path_button.setGeometry(QRect(0, 30, 80, 30))
        sizePolicy1.setHeightForWidth(self.path_button.sizePolicy().hasHeightForWidth())
        self.path_button.setSizePolicy(sizePolicy1)
        self.path_button.setFont(font)
        self.path_button.setFocusPolicy(Qt.StrongFocus)
        self.path_button.setLayoutDirection(Qt.LeftToRight)
        self.path_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.path_button.setIconSize(QSize(16, 16))
        self.path_button.setCheckable(False)
        self.full_button = QPushButton(self.method_window)
        self.full_button.setObjectName(u"full_button")
        self.full_button.setGeometry(QRect(0, 60, 80, 30))
        sizePolicy1.setHeightForWidth(self.full_button.sizePolicy().hasHeightForWidth())
        self.full_button.setSizePolicy(sizePolicy1)
        self.full_button.setFont(font)
        self.full_button.setFocusPolicy(Qt.StrongFocus)
        self.full_button.setLayoutDirection(Qt.LeftToRight)
        self.full_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.full_button.setIconSize(QSize(16, 16))
        self.full_button.setCheckable(False)
        self.virus_widget = QWidget(self.scan_window)
        self.virus_widget.setObjectName(u"virus_widget")
        self.virus_widget.setGeometry(QRect(30, 100, 750, 400))
        self.virus_widget.setAcceptDrops(False)
        self.virus_widget.setLayoutDirection(Qt.LeftToRight)
        self.virus_widget.setAutoFillBackground(False)
        self.virus_widget.setStyleSheet(u"")
        self.virus_list = QListWidget(self.virus_widget)
        self.virus_list.setObjectName(u"virus_list")
        self.virus_list.setGeometry(QRect(10, 10, 730, 380))
        font2 = QFont()
        font2.setFamilies([u"Microsoft YaHei"])
        font2.setPointSize(9)
        self.virus_list.setFont(font2)
        self.virus_list.setLayoutDirection(Qt.LeftToRight)
        self.virus_list.setStyleSheet(u"QListView { background-color: transparent; color: rgb(0, 0, 0); border: 1px solid rgb(235, 235, 235); border-radius: 10px; outline: none; } QListView::item { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border: none; border-bottom: 1px solid rgb(235, 235, 235); padding: 5px; } QListView::item:first { border-top-left-radius: 5px; border-top-right-radius: 5px; } QListView::item:last { border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; } QListView::item:hover { background-color: rgb(240, 240, 240); } QScrollBar:vertical { background: transparent; width: 6px; margin: 0px; } QScrollBar::handle:vertical { background: rgb(200, 200, 200); border-radius: 3px; min-height: 20px; } QScrollBar:horizontal { background: transparent; height: 6px; margin: 0px; } QScrollBar::handle:horizontal { background: rgb(200, 200, 200); border-radius: 3px; min-width: 20px; } QScrollBar::handle:hover { background: rgb(180, 180, 180); } QScrollBar::add-line, QScrollBar::sub-line { width: 0px; height: 0px; } QScro"
                        "llBar::add-page, QScrollBar::sub-page { background: transparent; }\n"
"")
        self.virus_list.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.virus_list.setTabKeyNavigation(False)
        self.virus_list.setProperty(u"showDropIndicator", True)
        self.virus_list.setDefaultDropAction(Qt.CopyAction)
        self.virus_list.setAlternatingRowColors(False)
        self.virus_list.setSelectionMode(QAbstractItemView.SingleSelection)
        self.virus_list.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.virus_list.setVerticalScrollMode(QAbstractItemView.ScrollPerItem)
        self.virus_list.setHorizontalScrollMode(QAbstractItemView.ScrollPerItem)
        self.virus_list.setMovement(QListView.Static)
        self.virus_list.setProperty(u"isWrapping", False)
        self.virus_list.setResizeMode(QListView.Fixed)
        self.virus_list.setLayoutMode(QListView.SinglePass)
        self.virus_list.setViewMode(QListView.ListMode)
        self.virus_list.setUniformItemSizes(False)
        self.virus_list.setSelectionRectVisible(False)
        self.virus_list.setSortingEnabled(False)
        self.progress_widget = QWidget(self.scan_window)
        self.progress_widget.setObjectName(u"progress_widget")
        self.progress_widget.setGeometry(QRect(30, 20, 750, 80))
        self.progress_widget.setAcceptDrops(False)
        self.progress_widget.setLayoutDirection(Qt.LeftToRight)
        self.progress_widget.setAutoFillBackground(False)
        self.method_button = QPushButton(self.progress_widget)
        self.method_button.setObjectName(u"method_button")
        self.method_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.method_button.sizePolicy().hasHeightForWidth())
        self.method_button.setSizePolicy(sizePolicy1)
        self.method_button.setFont(font)
        self.method_button.setFocusPolicy(Qt.StrongFocus)
        self.method_button.setLayoutDirection(Qt.LeftToRight)
        self.method_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.method_button.setIconSize(QSize(16, 16))
        self.method_button.setCheckable(True)
        self.progress_text = QLabel(self.progress_widget)
        self.progress_text.setObjectName(u"progress_text")
        self.progress_text.setGeometry(QRect(10, 50, 730, 20))
        font3 = QFont()
        font3.setFamilies([u"Microsoft YaHei"])
        font3.setPointSize(10)
        self.progress_text.setFont(font3)
        self.progress_text.setLayoutDirection(Qt.LeftToRight)
        self.progress_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.progress_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.progress_text.setWordWrap(False)
        self.progress_title = QLabel(self.progress_widget)
        self.progress_title.setObjectName(u"progress_title")
        self.progress_title.setGeometry(QRect(10, 10, 500, 30))
        font4 = QFont()
        font4.setFamilies([u"Microsoft YaHei"])
        font4.setPointSize(14)
        font4.setBold(False)
        self.progress_title.setFont(font4)
        self.progress_title.setLayoutDirection(Qt.LeftToRight)
        self.progress_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.progress_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.stop_button = QPushButton(self.progress_widget)
        self.stop_button.setObjectName(u"stop_button")
        self.stop_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.stop_button.sizePolicy().hasHeightForWidth())
        self.stop_button.setSizePolicy(sizePolicy1)
        self.stop_button.setFont(font)
        self.stop_button.setFocusPolicy(Qt.StrongFocus)
        self.stop_button.setLayoutDirection(Qt.LeftToRight)
        self.stop_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.stop_button.setIconSize(QSize(16, 16))
        self.stop_button.setCheckable(True)
        self.solve_button = QPushButton(self.progress_widget)
        self.solve_button.setObjectName(u"solve_button")
        self.solve_button.setGeometry(QRect(570, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.solve_button.sizePolicy().hasHeightForWidth())
        self.solve_button.setSizePolicy(sizePolicy1)
        self.solve_button.setFont(font)
        self.solve_button.setFocusPolicy(Qt.StrongFocus)
        self.solve_button.setLayoutDirection(Qt.LeftToRight)
        self.solve_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.solve_button.setIconSize(QSize(16, 16))
        self.solve_button.setCheckable(True)
        self.stop_button.raise_()
        self.method_button.raise_()
        self.progress_text.raise_()
        self.progress_title.raise_()
        self.solve_button.raise_()
        self.virus_widget.raise_()
        self.progress_widget.raise_()
        self.method_window.raise_()
        self.taskmgr_window = QWidget(self.main_widget)
        self.taskmgr_window.setObjectName(u"taskmgr_window")
        self.taskmgr_window.setGeometry(QRect(80, 60, 810, 520))
        self.taskmgr_window.setFont(font)
        self.taskmgr_window.setLayoutDirection(Qt.LeftToRight)
        self.taskmgr_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.manage_widget = QWidget(self.taskmgr_window)
        self.manage_widget.setObjectName(u"manage_widget")
        self.manage_widget.setGeometry(QRect(30, 20, 750, 430))
        self.manage_widget.setAcceptDrops(False)
        self.manage_widget.setLayoutDirection(Qt.LeftToRight)
        self.manage_widget.setAutoFillBackground(False)
        self.manage_widget.setStyleSheet(u"")
        self.manage_list = QListView(self.manage_widget)
        self.manage_list.setObjectName(u"manage_list")
        self.manage_list.setGeometry(QRect(10, 10, 730, 410))
        self.manage_list.setFont(font2)
        self.manage_list.setLayoutDirection(Qt.LeftToRight)
        self.manage_list.setStyleSheet(u"QListView { background-color: transparent; color: rgb(0, 0, 0); border: 1px solid rgb(235, 235, 235); border-radius: 10px; outline: none; } QListView::item { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border: none; border-bottom: 1px solid rgb(235, 235, 235); padding: 5px; } QListView::item:first { border-top-left-radius: 5px; border-top-right-radius: 5px; } QListView::item:last { border-bottom-left-radius: 5px; border-bottom-right-radius: 5px; } QListView::item:hover { background-color: rgb(240, 240, 240); } QScrollBar:vertical { background: transparent; width: 6px; margin: 0px; } QScrollBar::handle:vertical { background: rgb(200, 200, 200); border-radius: 3px; min-height: 20px; } QScrollBar:horizontal { background: transparent; height: 6px; margin: 0px; } QScrollBar::handle:horizontal { background: rgb(200, 200, 200); border-radius: 3px; min-width: 20px; } QScrollBar::handle:hover { background: rgb(180, 180, 180); } QScrollBar::add-line, QScrollBar::sub-line { width: 0px; height: 0px; } QScro"
                        "llBar::add-page, QScrollBar::sub-page { background: transparent; }\n"
"")
        self.manage_list.setAutoScroll(True)
        self.manage_list.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.manage_list.setTabKeyNavigation(True)
        self.manage_list.setProperty(u"showDropIndicator", True)
        self.manage_list.setDragDropOverwriteMode(True)
        self.manage_list.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.manage_list.setDefaultDropAction(Qt.IgnoreAction)
        self.manage_list.setAlternatingRowColors(False)
        self.manage_list.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.manage_list.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.manage_list.setTextElideMode(Qt.ElideRight)
        self.manage_list.setVerticalScrollMode(QAbstractItemView.ScrollPerItem)
        self.info_widget = QWidget(self.taskmgr_window)
        self.info_widget.setObjectName(u"info_widget")
        self.info_widget.setGeometry(QRect(30, 450, 750, 50))
        self.info_widget.setAcceptDrops(False)
        self.info_widget.setLayoutDirection(Qt.LeftToRight)
        self.info_widget.setAutoFillBackground(False)
        self.info_widget.setStyleSheet(u"")
        self.info_title = QLabel(self.info_widget)
        self.info_title.setObjectName(u"info_title")
        self.info_title.setGeometry(QRect(10, 10, 220, 30))
        self.info_title.setFont(font4)
        self.info_title.setLayoutDirection(Qt.LeftToRight)
        self.info_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.info_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.info_text = QTextEdit(self.info_widget)
        self.info_text.setObjectName(u"info_text")
        self.info_text.setGeometry(QRect(240, 10, 500, 30))
        self.info_text.setFont(font1)
        self.info_text.setLayoutDirection(Qt.LeftToRight)
        self.info_text.setStyleSheet(u"QTextEdit { background-color: transparent; color: rgb(0, 0, 0); border: 1px solid rgb(235, 235, 235); border-radius: 10px; outline: none; }\n"
"")
        self.info_text.setFrameShape(QFrame.StyledPanel)
        self.info_text.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.info_text.setSizeAdjustPolicy(QAbstractScrollArea.AdjustIgnored)
        self.info_text.setTabChangesFocus(False)
        self.info_text.setLineWrapColumnOrWidth(0)
        self.info_text.setReadOnly(True)
        self.info_text.setOverwriteMode(False)
        self.blank_window = QWidget(self.main_widget)
        self.blank_window.setObjectName(u"blank_window")
        self.blank_window.setGeometry(QRect(80, 60, 810, 520))
        self.blank_window.setFont(font1)
        self.blank_window.setLayoutDirection(Qt.LeftToRight)
        self.blank_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.setting_window = QWidget(self.main_widget)
        self.setting_window.setObjectName(u"setting_window")
        self.setting_window.setGeometry(QRect(80, 60, 810, 520))
        self.setting_window.setFont(font)
        self.setting_window.setLayoutDirection(Qt.LeftToRight)
        self.setting_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.sensitive_widget = QWidget(self.setting_window)
        self.sensitive_widget.setObjectName(u"sensitive_widget")
        self.sensitive_widget.setGeometry(QRect(30, 20, 750, 80))
        self.sensitive_widget.setFont(font1)
        self.sensitive_widget.setAcceptDrops(False)
        self.sensitive_widget.setLayoutDirection(Qt.LeftToRight)
        self.sensitive_widget.setAutoFillBackground(False)
        self.sensitive_title = QLabel(self.sensitive_widget)
        self.sensitive_title.setObjectName(u"sensitive_title")
        self.sensitive_title.setGeometry(QRect(10, 10, 500, 30))
        font5 = QFont()
        font5.setFamilies([u"Microsoft YaHei"])
        font5.setPointSize(14)
        font5.setBold(False)
        font5.setStyleStrategy(QFont.PreferAntialias)
        self.sensitive_title.setFont(font5)
        self.sensitive_title.setLayoutDirection(Qt.LeftToRight)
        self.sensitive_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.sensitive_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.sensitive_text = QLabel(self.sensitive_widget)
        self.sensitive_text.setObjectName(u"sensitive_text")
        self.sensitive_text.setGeometry(QRect(10, 50, 500, 20))
        self.sensitive_text.setFont(font)
        self.sensitive_text.setLayoutDirection(Qt.LeftToRight)
        self.sensitive_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.sensitive_text.setScaledContents(False)
        self.sensitive_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.sensitive_text.setWordWrap(False)
        self.sensitive_switch = QPushButton(self.sensitive_widget)
        self.sensitive_switch.setObjectName(u"sensitive_switch")
        self.sensitive_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.sensitive_switch.sizePolicy().hasHeightForWidth())
        self.sensitive_switch.setSizePolicy(sizePolicy1)
        self.sensitive_switch.setFont(font)
        self.sensitive_switch.setFocusPolicy(Qt.StrongFocus)
        self.sensitive_switch.setLayoutDirection(Qt.LeftToRight)
        self.sensitive_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.sensitive_switch.setIconSize(QSize(16, 16))
        self.sensitive_switch.setCheckable(True)
        self.sensitive_switch.setChecked(False)
        self.language_widget = QWidget(self.setting_window)
        self.language_widget.setObjectName(u"language_widget")
        self.language_widget.setGeometry(QRect(30, 420, 750, 80))
        self.language_widget.setAcceptDrops(False)
        self.language_widget.setLayoutDirection(Qt.LeftToRight)
        self.language_widget.setAutoFillBackground(False)
        self.language_title = QLabel(self.language_widget)
        self.language_title.setObjectName(u"language_title")
        self.language_title.setGeometry(QRect(10, 10, 400, 30))
        self.language_title.setFont(font5)
        self.language_title.setLayoutDirection(Qt.LeftToRight)
        self.language_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.language_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.language_text = QLabel(self.language_widget)
        self.language_text.setObjectName(u"language_text")
        self.language_text.setGeometry(QRect(10, 50, 400, 20))
        font6 = QFont()
        font6.setFamilies([u"Microsoft YaHei"])
        font6.setPointSize(10)
        font6.setBold(False)
        font6.setStyleStrategy(QFont.PreferAntialias)
        self.language_text.setFont(font6)
        self.language_text.setLayoutDirection(Qt.LeftToRight)
        self.language_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.language_text.setScaledContents(False)
        self.language_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.language_text.setWordWrap(False)
        self.simplified_switch = QRadioButton(self.language_widget)
        self.simplified_switch.setObjectName(u"simplified_switch")
        self.simplified_switch.setGeometry(QRect(540, 30, 100, 20))
        self.simplified_switch.setFont(font)
        self.simplified_switch.setLayoutDirection(Qt.LeftToRight)
        self.simplified_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.traditional_switch = QRadioButton(self.language_widget)
        self.traditional_switch.setObjectName(u"traditional_switch")
        self.traditional_switch.setGeometry(QRect(430, 30, 100, 20))
        self.traditional_switch.setFont(font)
        self.traditional_switch.setLayoutDirection(Qt.LeftToRight)
        self.traditional_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.english_switch = QRadioButton(self.language_widget)
        self.english_switch.setObjectName(u"english_switch")
        self.english_switch.setGeometry(QRect(650, 30, 100, 20))
        self.english_switch.setFont(font)
        self.english_switch.setLayoutDirection(Qt.LeftToRight)
        self.english_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.extension_widget = QWidget(self.setting_window)
        self.extension_widget.setObjectName(u"extension_widget")
        self.extension_widget.setGeometry(QRect(30, 100, 750, 80))
        self.extension_widget.setAcceptDrops(False)
        self.extension_widget.setLayoutDirection(Qt.LeftToRight)
        self.extension_widget.setAutoFillBackground(False)
        self.extension_title = QLabel(self.extension_widget)
        self.extension_title.setObjectName(u"extension_title")
        self.extension_title.setGeometry(QRect(10, 10, 500, 30))
        self.extension_title.setFont(font5)
        self.extension_title.setLayoutDirection(Qt.LeftToRight)
        self.extension_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.extension_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.extension_text = QLabel(self.extension_widget)
        self.extension_text.setObjectName(u"extension_text")
        self.extension_text.setGeometry(QRect(10, 50, 500, 20))
        self.extension_text.setFont(font)
        self.extension_text.setLayoutDirection(Qt.LeftToRight)
        self.extension_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.extension_text.setScaledContents(False)
        self.extension_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.extension_text.setWordWrap(False)
        self.extension_switch = QPushButton(self.extension_widget)
        self.extension_switch.setObjectName(u"extension_switch")
        self.extension_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.extension_switch.sizePolicy().hasHeightForWidth())
        self.extension_switch.setSizePolicy(sizePolicy1)
        self.extension_switch.setFont(font)
        self.extension_switch.setFocusPolicy(Qt.StrongFocus)
        self.extension_switch.setLayoutDirection(Qt.LeftToRight)
        self.extension_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.extension_switch.setIconSize(QSize(16, 16))
        self.extension_switch.setCheckable(True)
        self.theme_widget = QWidget(self.setting_window)
        self.theme_widget.setObjectName(u"theme_widget")
        self.theme_widget.setGeometry(QRect(30, 340, 750, 80))
        self.theme_widget.setLayoutDirection(Qt.LeftToRight)
        self.theme_title = QLabel(self.theme_widget)
        self.theme_title.setObjectName(u"theme_title")
        self.theme_title.setGeometry(QRect(10, 10, 400, 30))
        self.theme_title.setFont(font5)
        self.theme_title.setLayoutDirection(Qt.LeftToRight)
        self.theme_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.theme_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.theme_text = QLabel(self.theme_widget)
        self.theme_text.setObjectName(u"theme_text")
        self.theme_text.setGeometry(QRect(10, 50, 400, 20))
        self.theme_text.setFont(font)
        self.theme_text.setLayoutDirection(Qt.LeftToRight)
        self.theme_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.theme_text.setScaledContents(False)
        self.theme_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.theme_text.setWordWrap(False)
        self.blue_switch = QRadioButton(self.theme_widget)
        self.blue_switch.setObjectName(u"blue_switch")
        self.blue_switch.setGeometry(QRect(540, 50, 100, 20))
        self.blue_switch.setFont(font)
        self.blue_switch.setLayoutDirection(Qt.LeftToRight)
        self.blue_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.yellow_switch = QRadioButton(self.theme_widget)
        self.yellow_switch.setObjectName(u"yellow_switch")
        self.yellow_switch.setGeometry(QRect(650, 20, 100, 20))
        self.yellow_switch.setFont(font)
        self.yellow_switch.setLayoutDirection(Qt.LeftToRight)
        self.yellow_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.red_switch = QRadioButton(self.theme_widget)
        self.red_switch.setObjectName(u"red_switch")
        self.red_switch.setGeometry(QRect(540, 20, 100, 20))
        self.red_switch.setFont(font)
        self.red_switch.setLayoutDirection(Qt.LeftToRight)
        self.red_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.green_switch = QRadioButton(self.theme_widget)
        self.green_switch.setObjectName(u"green_switch")
        self.green_switch.setGeometry(QRect(430, 50, 100, 20))
        self.green_switch.setFont(font3)
        self.green_switch.setLayoutDirection(Qt.LeftToRight)
        self.green_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.black_switch = QRadioButton(self.theme_widget)
        self.black_switch.setObjectName(u"black_switch")
        self.black_switch.setGeometry(QRect(650, 50, 100, 20))
        self.black_switch.setFont(font)
        self.black_switch.setLayoutDirection(Qt.LeftToRight)
        self.black_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.white_switch = QRadioButton(self.theme_widget)
        self.white_switch.setObjectName(u"white_switch")
        self.white_switch.setGeometry(QRect(430, 20, 100, 20))
        self.white_switch.setFont(font)
        self.white_switch.setLayoutDirection(Qt.LeftToRight)
        self.white_switch.setStyleSheet(u"QRadioButton { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.cloud_widget = QWidget(self.setting_window)
        self.cloud_widget.setObjectName(u"cloud_widget")
        self.cloud_widget.setGeometry(QRect(30, 180, 750, 80))
        self.cloud_widget.setAcceptDrops(False)
        self.cloud_widget.setLayoutDirection(Qt.LeftToRight)
        self.cloud_widget.setAutoFillBackground(False)
        self.cloud_title = QLabel(self.cloud_widget)
        self.cloud_title.setObjectName(u"cloud_title")
        self.cloud_title.setGeometry(QRect(10, 10, 500, 30))
        self.cloud_title.setFont(font5)
        self.cloud_title.setLayoutDirection(Qt.LeftToRight)
        self.cloud_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.cloud_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.cloud_title.setWordWrap(False)
        self.cloud_text = QLabel(self.cloud_widget)
        self.cloud_text.setObjectName(u"cloud_text")
        self.cloud_text.setGeometry(QRect(10, 50, 500, 20))
        self.cloud_text.setFont(font)
        self.cloud_text.setLayoutDirection(Qt.LeftToRight)
        self.cloud_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.cloud_text.setScaledContents(False)
        self.cloud_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.cloud_text.setWordWrap(False)
        self.cloud_button = QPushButton(self.cloud_widget)
        self.cloud_button.setObjectName(u"cloud_button")
        self.cloud_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.cloud_button.sizePolicy().hasHeightForWidth())
        self.cloud_button.setSizePolicy(sizePolicy1)
        self.cloud_button.setFont(font)
        self.cloud_button.setFocusPolicy(Qt.StrongFocus)
        self.cloud_button.setLayoutDirection(Qt.LeftToRight)
        self.cloud_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.cloud_button.setIconSize(QSize(16, 16))
        self.cloud_button.setCheckable(False)
        self.reset_widget = QWidget(self.setting_window)
        self.reset_widget.setObjectName(u"reset_widget")
        self.reset_widget.setGeometry(QRect(30, 260, 750, 80))
        self.reset_widget.setAcceptDrops(False)
        self.reset_widget.setLayoutDirection(Qt.LeftToRight)
        self.reset_widget.setAutoFillBackground(False)
        self.reset_widget.setStyleSheet(u"")
        self.reset_title = QLabel(self.reset_widget)
        self.reset_title.setObjectName(u"reset_title")
        self.reset_title.setGeometry(QRect(10, 10, 500, 30))
        self.reset_title.setFont(font5)
        self.reset_title.setLayoutDirection(Qt.LeftToRight)
        self.reset_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.reset_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.reset_text = QLabel(self.reset_widget)
        self.reset_text.setObjectName(u"reset_text")
        self.reset_text.setGeometry(QRect(10, 50, 500, 20))
        self.reset_text.setFont(font6)
        self.reset_text.setLayoutDirection(Qt.LeftToRight)
        self.reset_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.reset_text.setScaledContents(False)
        self.reset_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.reset_text.setWordWrap(False)
        self.reset_button = QPushButton(self.reset_widget)
        self.reset_button.setObjectName(u"reset_button")
        self.reset_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.reset_button.sizePolicy().hasHeightForWidth())
        self.reset_button.setSizePolicy(sizePolicy1)
        self.reset_button.setFont(font)
        self.reset_button.setFocusPolicy(Qt.StrongFocus)
        self.reset_button.setLayoutDirection(Qt.LeftToRight)
        self.reset_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.reset_button.setIconSize(QSize(16, 16))
        self.reset_button.setCheckable(False)
        self.about_window = QWidget(self.main_widget)
        self.about_window.setObjectName(u"about_window")
        self.about_window.setGeometry(QRect(80, 60, 810, 520))
        self.about_window.setFont(font)
        self.about_window.setLayoutDirection(Qt.LeftToRight)
        self.about_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.update_widget = QWidget(self.about_window)
        self.update_widget.setObjectName(u"update_widget")
        self.update_widget.setGeometry(QRect(30, 180, 750, 80))
        self.update_widget.setAcceptDrops(False)
        self.update_widget.setLayoutDirection(Qt.LeftToRight)
        self.update_widget.setAutoFillBackground(False)
        self.update_widget.setStyleSheet(u"")
        self.update_title = QLabel(self.update_widget)
        self.update_title.setObjectName(u"update_title")
        self.update_title.setGeometry(QRect(10, 10, 500, 30))
        self.update_title.setFont(font5)
        self.update_title.setLayoutDirection(Qt.LeftToRight)
        self.update_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.update_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.update_text = QLabel(self.update_widget)
        self.update_text.setObjectName(u"update_text")
        self.update_text.setGeometry(QRect(10, 50, 500, 20))
        self.update_text.setFont(font6)
        self.update_text.setLayoutDirection(Qt.LeftToRight)
        self.update_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.update_text.setScaledContents(False)
        self.update_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.update_text.setWordWrap(False)
        self.update_button = QPushButton(self.update_widget)
        self.update_button.setObjectName(u"update_button")
        self.update_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.update_button.sizePolicy().hasHeightForWidth())
        self.update_button.setSizePolicy(sizePolicy1)
        self.update_button.setFont(font)
        self.update_button.setFocusPolicy(Qt.StrongFocus)
        self.update_button.setLayoutDirection(Qt.LeftToRight)
        self.update_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.update_button.setIconSize(QSize(16, 16))
        self.update_button.setCheckable(False)
        self.website_widget = QWidget(self.about_window)
        self.website_widget.setObjectName(u"website_widget")
        self.website_widget.setGeometry(QRect(30, 100, 750, 80))
        self.website_widget.setAcceptDrops(False)
        self.website_widget.setLayoutDirection(Qt.LeftToRight)
        self.website_widget.setAutoFillBackground(False)
        self.website_widget.setStyleSheet(u"")
        self.website_title = QLabel(self.website_widget)
        self.website_title.setObjectName(u"website_title")
        self.website_title.setGeometry(QRect(10, 10, 500, 30))
        self.website_title.setFont(font5)
        self.website_title.setLayoutDirection(Qt.LeftToRight)
        self.website_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.website_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.website_text = QLabel(self.website_widget)
        self.website_text.setObjectName(u"website_text")
        self.website_text.setGeometry(QRect(10, 50, 500, 20))
        self.website_text.setFont(font6)
        self.website_text.setLayoutDirection(Qt.LeftToRight)
        self.website_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.website_text.setScaledContents(False)
        self.website_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.website_text.setWordWrap(False)
        self.website_button = QPushButton(self.website_widget)
        self.website_button.setObjectName(u"website_button")
        self.website_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.website_button.sizePolicy().hasHeightForWidth())
        self.website_button.setSizePolicy(sizePolicy1)
        self.website_button.setFont(font)
        self.website_button.setFocusPolicy(Qt.StrongFocus)
        self.website_button.setLayoutDirection(Qt.LeftToRight)
        self.website_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.website_button.setIconSize(QSize(16, 16))
        self.website_button.setCheckable(False)
        self.product_widget = QWidget(self.about_window)
        self.product_widget.setObjectName(u"product_widget")
        self.product_widget.setGeometry(QRect(30, 20, 750, 80))
        self.product_widget.setAcceptDrops(False)
        self.product_widget.setLayoutDirection(Qt.LeftToRight)
        self.product_widget.setAutoFillBackground(False)
        self.product_widget.setStyleSheet(u"")
        self.product_title = QLabel(self.product_widget)
        self.product_title.setObjectName(u"product_title")
        self.product_title.setGeometry(QRect(10, 10, 500, 30))
        self.product_title.setFont(font5)
        self.product_title.setLayoutDirection(Qt.LeftToRight)
        self.product_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.product_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.product_text = QLabel(self.product_widget)
        self.product_text.setObjectName(u"product_text")
        self.product_text.setGeometry(QRect(10, 50, 500, 20))
        self.product_text.setFont(font6)
        self.product_text.setLayoutDirection(Qt.LeftToRight)
        self.product_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.product_text.setScaledContents(False)
        self.product_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.product_text.setWordWrap(False)
        self.product_button = QPushButton(self.product_widget)
        self.product_button.setObjectName(u"product_button")
        self.product_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.product_button.sizePolicy().hasHeightForWidth())
        self.product_button.setSizePolicy(sizePolicy1)
        self.product_button.setFont(font)
        self.product_button.setFocusPolicy(Qt.StrongFocus)
        self.product_button.setLayoutDirection(Qt.LeftToRight)
        self.product_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.product_button.setIconSize(QSize(16, 16))
        self.product_button.setCheckable(False)
        self.license_widget = QWidget(self.about_window)
        self.license_widget.setObjectName(u"license_widget")
        self.license_widget.setGeometry(QRect(30, 260, 750, 240))
        self.license_widget.setAcceptDrops(False)
        self.license_widget.setLayoutDirection(Qt.LeftToRight)
        self.license_widget.setAutoFillBackground(False)
        self.license_widget.setStyleSheet(u"")
        self.license_text = QTextEdit(self.license_widget)
        self.license_text.setObjectName(u"license_text")
        self.license_text.setGeometry(QRect(10, 10, 730, 220))
        self.license_text.setFont(font2)
        self.license_text.setLayoutDirection(Qt.LeftToRight)
        self.license_text.setStyleSheet(u"QTextEdit { background-color: transparent; color: rgb(0, 0, 0); border: 1px solid rgb(235, 235, 235); border-radius: 10px; outline: none; } QTextEdit QScrollBar:vertical { background: transparent; width: 6px; margin: 0px; } QTextEdit QScrollBar::handle:vertical { background: rgb(200, 200, 200); border-radius: 3px; min-height: 20px; } QTextEdit QScrollBar:horizontal { background: transparent; height: 6px; margin: 0px; } QTextEdit QScrollBar::handle:horizontal { background: rgb(200, 200, 200); border-radius: 3px; min-width: 20px; } QTextEdit QScrollBar::handle:hover { background: rgb(180, 180, 180); } QTextEdit QScrollBar::add-line, QTextEdit QScrollBar::sub-line { width: 0px; height: 0px; } QTextEdit QScrollBar::add-page, QTextEdit QScrollBar::sub-page { background: transparent; }\n"
"")
        self.license_text.setFrameShape(QFrame.StyledPanel)
        self.license_text.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.license_text.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.license_text.setSizeAdjustPolicy(QAbstractScrollArea.AdjustIgnored)
        self.license_text.setTabChangesFocus(False)
        self.license_text.setLineWrapColumnOrWidth(0)
        self.license_text.setReadOnly(True)
        self.license_text.setOverwriteMode(False)
        self.protect_window = QWidget(self.main_widget)
        self.protect_window.setObjectName(u"protect_window")
        self.protect_window.setGeometry(QRect(80, 60, 810, 520))
        self.protect_window.setFont(font)
        self.protect_window.setLayoutDirection(Qt.LeftToRight)
        self.protect_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.process_widget = QWidget(self.protect_window)
        self.process_widget.setObjectName(u"process_widget")
        self.process_widget.setGeometry(QRect(30, 20, 750, 80))
        self.process_widget.setAcceptDrops(False)
        self.process_widget.setLayoutDirection(Qt.LeftToRight)
        self.process_widget.setAutoFillBackground(False)
        self.process_widget.setStyleSheet(u"")
        self.process_title = QLabel(self.process_widget)
        self.process_title.setObjectName(u"process_title")
        self.process_title.setGeometry(QRect(10, 10, 600, 30))
        self.process_title.setFont(font5)
        self.process_title.setLayoutDirection(Qt.LeftToRight)
        self.process_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.process_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.process_text = QLabel(self.process_widget)
        self.process_text.setObjectName(u"process_text")
        self.process_text.setGeometry(QRect(10, 50, 600, 20))
        self.process_text.setFont(font6)
        self.process_text.setLayoutDirection(Qt.LeftToRight)
        self.process_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.process_text.setScaledContents(False)
        self.process_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.process_text.setWordWrap(False)
        self.process_switch = QPushButton(self.process_widget)
        self.process_switch.setObjectName(u"process_switch")
        self.process_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.process_switch.sizePolicy().hasHeightForWidth())
        self.process_switch.setSizePolicy(sizePolicy1)
        self.process_switch.setFont(font)
        self.process_switch.setFocusPolicy(Qt.StrongFocus)
        self.process_switch.setLayoutDirection(Qt.LeftToRight)
        self.process_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.process_switch.setIconSize(QSize(16, 16))
        self.process_switch.setCheckable(True)
        self.document_widget = QWidget(self.protect_window)
        self.document_widget.setObjectName(u"document_widget")
        self.document_widget.setGeometry(QRect(30, 100, 750, 80))
        self.document_widget.setAcceptDrops(False)
        self.document_widget.setLayoutDirection(Qt.LeftToRight)
        self.document_widget.setAutoFillBackground(False)
        self.document_title = QLabel(self.document_widget)
        self.document_title.setObjectName(u"document_title")
        self.document_title.setGeometry(QRect(10, 10, 600, 30))
        self.document_title.setFont(font5)
        self.document_title.setLayoutDirection(Qt.LeftToRight)
        self.document_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.document_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.document_text = QLabel(self.document_widget)
        self.document_text.setObjectName(u"document_text")
        self.document_text.setGeometry(QRect(10, 50, 600, 20))
        self.document_text.setFont(font6)
        self.document_text.setLayoutDirection(Qt.LeftToRight)
        self.document_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.document_text.setScaledContents(False)
        self.document_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.document_text.setWordWrap(False)
        self.document_switch = QPushButton(self.document_widget)
        self.document_switch.setObjectName(u"document_switch")
        self.document_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.document_switch.sizePolicy().hasHeightForWidth())
        self.document_switch.setSizePolicy(sizePolicy1)
        self.document_switch.setFont(font)
        self.document_switch.setFocusPolicy(Qt.StrongFocus)
        self.document_switch.setLayoutDirection(Qt.LeftToRight)
        self.document_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.document_switch.setIconSize(QSize(16, 16))
        self.document_switch.setCheckable(True)
        self.system_widget = QWidget(self.protect_window)
        self.system_widget.setObjectName(u"system_widget")
        self.system_widget.setGeometry(QRect(30, 180, 750, 80))
        self.system_widget.setAcceptDrops(False)
        self.system_widget.setLayoutDirection(Qt.LeftToRight)
        self.system_widget.setAutoFillBackground(False)
        self.system_title = QLabel(self.system_widget)
        self.system_title.setObjectName(u"system_title")
        self.system_title.setGeometry(QRect(10, 10, 600, 30))
        self.system_title.setFont(font5)
        self.system_title.setLayoutDirection(Qt.LeftToRight)
        self.system_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.system_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.system_text = QLabel(self.system_widget)
        self.system_text.setObjectName(u"system_text")
        self.system_text.setGeometry(QRect(10, 50, 600, 20))
        self.system_text.setFont(font)
        self.system_text.setLayoutDirection(Qt.LeftToRight)
        self.system_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.system_text.setScaledContents(False)
        self.system_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.system_text.setWordWrap(False)
        self.system_switch = QPushButton(self.system_widget)
        self.system_switch.setObjectName(u"system_switch")
        self.system_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.system_switch.sizePolicy().hasHeightForWidth())
        self.system_switch.setSizePolicy(sizePolicy1)
        self.system_switch.setFont(font)
        self.system_switch.setFocusPolicy(Qt.StrongFocus)
        self.system_switch.setLayoutDirection(Qt.LeftToRight)
        self.system_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.system_switch.setIconSize(QSize(16, 16))
        self.system_switch.setCheckable(True)
        self.driver_widget = QWidget(self.protect_window)
        self.driver_widget.setObjectName(u"driver_widget")
        self.driver_widget.setGeometry(QRect(30, 260, 750, 80))
        self.driver_widget.setAcceptDrops(False)
        self.driver_widget.setLayoutDirection(Qt.LeftToRight)
        self.driver_widget.setAutoFillBackground(False)
        self.driver_title = QLabel(self.driver_widget)
        self.driver_title.setObjectName(u"driver_title")
        self.driver_title.setGeometry(QRect(10, 10, 600, 30))
        self.driver_title.setFont(font5)
        self.driver_title.setLayoutDirection(Qt.LeftToRight)
        self.driver_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.driver_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.driver_text = QLabel(self.driver_widget)
        self.driver_text.setObjectName(u"driver_text")
        self.driver_text.setGeometry(QRect(10, 50, 600, 20))
        self.driver_text.setFont(font)
        self.driver_text.setLayoutDirection(Qt.LeftToRight)
        self.driver_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.driver_text.setScaledContents(False)
        self.driver_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.driver_text.setWordWrap(False)
        self.driver_switch = QPushButton(self.driver_widget)
        self.driver_switch.setObjectName(u"driver_switch")
        self.driver_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.driver_switch.sizePolicy().hasHeightForWidth())
        self.driver_switch.setSizePolicy(sizePolicy1)
        self.driver_switch.setFont(font)
        self.driver_switch.setFocusPolicy(Qt.StrongFocus)
        self.driver_switch.setLayoutDirection(Qt.LeftToRight)
        self.driver_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.driver_switch.setIconSize(QSize(16, 16))
        self.driver_switch.setCheckable(True)
        self.network_widget = QWidget(self.protect_window)
        self.network_widget.setObjectName(u"network_widget")
        self.network_widget.setGeometry(QRect(30, 340, 750, 80))
        self.network_widget.setAcceptDrops(False)
        self.network_widget.setLayoutDirection(Qt.LeftToRight)
        self.network_widget.setAutoFillBackground(False)
        self.network_title = QLabel(self.network_widget)
        self.network_title.setObjectName(u"network_title")
        self.network_title.setGeometry(QRect(10, 10, 600, 30))
        self.network_title.setFont(font5)
        self.network_title.setLayoutDirection(Qt.LeftToRight)
        self.network_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.network_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.network_text = QLabel(self.network_widget)
        self.network_text.setObjectName(u"network_text")
        self.network_text.setGeometry(QRect(10, 50, 600, 20))
        self.network_text.setFont(font)
        self.network_text.setLayoutDirection(Qt.LeftToRight)
        self.network_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.network_text.setScaledContents(False)
        self.network_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.network_text.setWordWrap(False)
        self.network_switch = QPushButton(self.network_widget)
        self.network_switch.setObjectName(u"network_switch")
        self.network_switch.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.network_switch.sizePolicy().hasHeightForWidth())
        self.network_switch.setSizePolicy(sizePolicy1)
        self.network_switch.setFont(font)
        self.network_switch.setFocusPolicy(Qt.StrongFocus)
        self.network_switch.setLayoutDirection(Qt.LeftToRight)
        self.network_switch.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); } QPushButton:checked { background-color: rgb(210, 255, 210); } QPushButton:checked:hover { background-color: rgb(220, 255, 220); }\n"
"")
        self.network_switch.setIconSize(QSize(16, 16))
        self.network_switch.setCheckable(True)
        self.custom_widget = QWidget(self.protect_window)
        self.custom_widget.setObjectName(u"custom_widget")
        self.custom_widget.setGeometry(QRect(30, 420, 750, 80))
        self.custom_widget.setAcceptDrops(False)
        self.custom_widget.setLayoutDirection(Qt.LeftToRight)
        self.custom_widget.setAutoFillBackground(False)
        self.custom_widget.setStyleSheet(u"")
        self.custom_title = QLabel(self.custom_widget)
        self.custom_title.setObjectName(u"custom_title")
        self.custom_title.setGeometry(QRect(10, 10, 500, 30))
        self.custom_title.setFont(font5)
        self.custom_title.setLayoutDirection(Qt.LeftToRight)
        self.custom_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.custom_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.custom_text = QLabel(self.custom_widget)
        self.custom_text.setObjectName(u"custom_text")
        self.custom_text.setGeometry(QRect(10, 50, 500, 20))
        self.custom_text.setFont(font6)
        self.custom_text.setLayoutDirection(Qt.LeftToRight)
        self.custom_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgba(0, 0, 0, 1.0); }\n"
"")
        self.custom_text.setScaledContents(False)
        self.custom_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.custom_text.setWordWrap(False)
        self.custom_button = QPushButton(self.custom_widget)
        self.custom_button.setObjectName(u"custom_button")
        self.custom_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.custom_button.sizePolicy().hasHeightForWidth())
        self.custom_button.setSizePolicy(sizePolicy1)
        self.custom_button.setFont(font)
        self.custom_button.setFocusPolicy(Qt.StrongFocus)
        self.custom_button.setLayoutDirection(Qt.LeftToRight)
        self.custom_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.custom_button.setIconSize(QSize(16, 16))
        self.custom_button.setCheckable(False)
        self.custom_button_2 = QPushButton(self.custom_widget)
        self.custom_button_2.setObjectName(u"custom_button_2")
        self.custom_button_2.setGeometry(QRect(570, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.custom_button_2.sizePolicy().hasHeightForWidth())
        self.custom_button_2.setSizePolicy(sizePolicy1)
        self.custom_button_2.setFont(font)
        self.custom_button_2.setFocusPolicy(Qt.StrongFocus)
        self.custom_button_2.setLayoutDirection(Qt.LeftToRight)
        self.custom_button_2.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.custom_button_2.setIconSize(QSize(16, 16))
        self.custom_button_2.setCheckable(False)
        self.tool_window = QWidget(self.main_widget)
        self.tool_window.setObjectName(u"tool_window")
        self.tool_window.setGeometry(QRect(80, 60, 810, 520))
        self.tool_window.setFont(font)
        self.tool_window.setLayoutDirection(Qt.LeftToRight)
        self.tool_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.taskmgr_widget = QWidget(self.tool_window)
        self.taskmgr_widget.setObjectName(u"taskmgr_widget")
        self.taskmgr_widget.setGeometry(QRect(30, 20, 750, 80))
        self.taskmgr_widget.setAcceptDrops(False)
        self.taskmgr_widget.setLayoutDirection(Qt.LeftToRight)
        self.taskmgr_widget.setAutoFillBackground(False)
        self.taskmgr_widget.setStyleSheet(u"")
        self.taskmgr_title = QLabel(self.taskmgr_widget)
        self.taskmgr_title.setObjectName(u"taskmgr_title")
        self.taskmgr_title.setGeometry(QRect(10, 10, 500, 30))
        self.taskmgr_title.setFont(font5)
        self.taskmgr_title.setLayoutDirection(Qt.LeftToRight)
        self.taskmgr_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.taskmgr_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.taskmgr_text = QLabel(self.taskmgr_widget)
        self.taskmgr_text.setObjectName(u"taskmgr_text")
        self.taskmgr_text.setGeometry(QRect(10, 50, 500, 20))
        self.taskmgr_text.setFont(font6)
        self.taskmgr_text.setLayoutDirection(Qt.LeftToRight)
        self.taskmgr_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.taskmgr_text.setScaledContents(False)
        self.taskmgr_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.taskmgr_text.setWordWrap(False)
        self.taskmgr_button = QPushButton(self.taskmgr_widget)
        self.taskmgr_button.setObjectName(u"taskmgr_button")
        self.taskmgr_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.taskmgr_button.sizePolicy().hasHeightForWidth())
        self.taskmgr_button.setSizePolicy(sizePolicy1)
        self.taskmgr_button.setFont(font)
        self.taskmgr_button.setFocusPolicy(Qt.StrongFocus)
        self.taskmgr_button.setLayoutDirection(Qt.LeftToRight)
        self.taskmgr_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.taskmgr_button.setIconSize(QSize(16, 16))
        self.taskmgr_button.setCheckable(False)
        self.clean_widget = QWidget(self.tool_window)
        self.clean_widget.setObjectName(u"clean_widget")
        self.clean_widget.setGeometry(QRect(30, 100, 750, 80))
        self.clean_widget.setAcceptDrops(False)
        self.clean_widget.setLayoutDirection(Qt.LeftToRight)
        self.clean_widget.setAutoFillBackground(False)
        self.clean_widget.setStyleSheet(u"")
        self.clean_title = QLabel(self.clean_widget)
        self.clean_title.setObjectName(u"clean_title")
        self.clean_title.setGeometry(QRect(10, 10, 500, 30))
        self.clean_title.setFont(font5)
        self.clean_title.setLayoutDirection(Qt.LeftToRight)
        self.clean_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.clean_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.clean_text = QLabel(self.clean_widget)
        self.clean_text.setObjectName(u"clean_text")
        self.clean_text.setGeometry(QRect(10, 50, 500, 20))
        self.clean_text.setFont(font6)
        self.clean_text.setLayoutDirection(Qt.LeftToRight)
        self.clean_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.clean_text.setScaledContents(False)
        self.clean_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.clean_text.setWordWrap(False)
        self.clean_button = QPushButton(self.clean_widget)
        self.clean_button.setObjectName(u"clean_button")
        self.clean_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.clean_button.sizePolicy().hasHeightForWidth())
        self.clean_button.setSizePolicy(sizePolicy1)
        self.clean_button.setFont(font)
        self.clean_button.setFocusPolicy(Qt.StrongFocus)
        self.clean_button.setLayoutDirection(Qt.LeftToRight)
        self.clean_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.clean_button.setIconSize(QSize(16, 16))
        self.clean_button.setCheckable(False)
        self.repair_widget = QWidget(self.tool_window)
        self.repair_widget.setObjectName(u"repair_widget")
        self.repair_widget.setGeometry(QRect(30, 180, 750, 80))
        self.repair_widget.setAcceptDrops(False)
        self.repair_widget.setLayoutDirection(Qt.LeftToRight)
        self.repair_widget.setAutoFillBackground(False)
        self.repair_widget.setStyleSheet(u"")
        self.repair_title = QLabel(self.repair_widget)
        self.repair_title.setObjectName(u"repair_title")
        self.repair_title.setGeometry(QRect(10, 10, 500, 30))
        self.repair_title.setFont(font5)
        self.repair_title.setLayoutDirection(Qt.LeftToRight)
        self.repair_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.repair_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.repair_text = QLabel(self.repair_widget)
        self.repair_text.setObjectName(u"repair_text")
        self.repair_text.setGeometry(QRect(10, 50, 500, 20))
        self.repair_text.setFont(font6)
        self.repair_text.setLayoutDirection(Qt.LeftToRight)
        self.repair_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.repair_text.setScaledContents(False)
        self.repair_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.repair_text.setWordWrap(False)
        self.repair_button = QPushButton(self.repair_widget)
        self.repair_button.setObjectName(u"repair_button")
        self.repair_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.repair_button.sizePolicy().hasHeightForWidth())
        self.repair_button.setSizePolicy(sizePolicy1)
        self.repair_button.setFont(font)
        self.repair_button.setFocusPolicy(Qt.StrongFocus)
        self.repair_button.setLayoutDirection(Qt.LeftToRight)
        self.repair_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.repair_button.setIconSize(QSize(16, 16))
        self.repair_button.setCheckable(False)
        self.popup_widget = QWidget(self.tool_window)
        self.popup_widget.setObjectName(u"popup_widget")
        self.popup_widget.setGeometry(QRect(30, 260, 750, 80))
        self.popup_widget.setAcceptDrops(False)
        self.popup_widget.setLayoutDirection(Qt.LeftToRight)
        self.popup_widget.setAutoFillBackground(False)
        self.popup_widget.setStyleSheet(u"")
        self.popup_title = QLabel(self.popup_widget)
        self.popup_title.setObjectName(u"popup_title")
        self.popup_title.setGeometry(QRect(10, 10, 500, 30))
        self.popup_title.setFont(font5)
        self.popup_title.setLayoutDirection(Qt.LeftToRight)
        self.popup_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.popup_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.popup_text = QLabel(self.popup_widget)
        self.popup_text.setObjectName(u"popup_text")
        self.popup_text.setGeometry(QRect(10, 50, 500, 20))
        self.popup_text.setFont(font6)
        self.popup_text.setLayoutDirection(Qt.LeftToRight)
        self.popup_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.popup_text.setScaledContents(False)
        self.popup_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.popup_text.setWordWrap(False)
        self.popup_button = QPushButton(self.popup_widget)
        self.popup_button.setObjectName(u"popup_button")
        self.popup_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.popup_button.sizePolicy().hasHeightForWidth())
        self.popup_button.setSizePolicy(sizePolicy1)
        self.popup_button.setFont(font)
        self.popup_button.setFocusPolicy(Qt.StrongFocus)
        self.popup_button.setLayoutDirection(Qt.LeftToRight)
        self.popup_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.popup_button.setIconSize(QSize(16, 16))
        self.popup_button.setCheckable(False)
        self.popup_button_2 = QPushButton(self.popup_widget)
        self.popup_button_2.setObjectName(u"popup_button_2")
        self.popup_button_2.setGeometry(QRect(570, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.popup_button_2.sizePolicy().hasHeightForWidth())
        self.popup_button_2.setSizePolicy(sizePolicy1)
        self.popup_button_2.setFont(font)
        self.popup_button_2.setFocusPolicy(Qt.StrongFocus)
        self.popup_button_2.setLayoutDirection(Qt.LeftToRight)
        self.popup_button_2.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.popup_button_2.setIconSize(QSize(16, 16))
        self.popup_button_2.setCheckable(False)
        self.whitelist_widget = QWidget(self.tool_window)
        self.whitelist_widget.setObjectName(u"whitelist_widget")
        self.whitelist_widget.setGeometry(QRect(30, 340, 750, 80))
        self.whitelist_widget.setAcceptDrops(False)
        self.whitelist_widget.setLayoutDirection(Qt.LeftToRight)
        self.whitelist_widget.setAutoFillBackground(False)
        self.whitelist_title = QLabel(self.whitelist_widget)
        self.whitelist_title.setObjectName(u"whitelist_title")
        self.whitelist_title.setGeometry(QRect(10, 10, 500, 30))
        self.whitelist_title.setFont(font5)
        self.whitelist_title.setLayoutDirection(Qt.LeftToRight)
        self.whitelist_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.whitelist_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.whitelist_text = QLabel(self.whitelist_widget)
        self.whitelist_text.setObjectName(u"whitelist_text")
        self.whitelist_text.setGeometry(QRect(10, 50, 500, 20))
        self.whitelist_text.setFont(font)
        self.whitelist_text.setLayoutDirection(Qt.LeftToRight)
        self.whitelist_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.whitelist_text.setScaledContents(False)
        self.whitelist_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.whitelist_text.setWordWrap(False)
        self.whitelist_button = QPushButton(self.whitelist_widget)
        self.whitelist_button.setObjectName(u"whitelist_button")
        self.whitelist_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.whitelist_button.sizePolicy().hasHeightForWidth())
        self.whitelist_button.setSizePolicy(sizePolicy1)
        self.whitelist_button.setFont(font)
        self.whitelist_button.setFocusPolicy(Qt.StrongFocus)
        self.whitelist_button.setLayoutDirection(Qt.LeftToRight)
        self.whitelist_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.whitelist_button.setIconSize(QSize(16, 16))
        self.whitelist_button.setCheckable(False)
        self.whitelist_button_2 = QPushButton(self.whitelist_widget)
        self.whitelist_button_2.setObjectName(u"whitelist_button_2")
        self.whitelist_button_2.setGeometry(QRect(570, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.whitelist_button_2.sizePolicy().hasHeightForWidth())
        self.whitelist_button_2.setSizePolicy(sizePolicy1)
        self.whitelist_button_2.setFont(font)
        self.whitelist_button_2.setFocusPolicy(Qt.StrongFocus)
        self.whitelist_button_2.setLayoutDirection(Qt.LeftToRight)
        self.whitelist_button_2.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.whitelist_button_2.setIconSize(QSize(16, 16))
        self.whitelist_button_2.setCheckable(False)
        self.quarantine_widget = QWidget(self.tool_window)
        self.quarantine_widget.setObjectName(u"quarantine_widget")
        self.quarantine_widget.setGeometry(QRect(30, 420, 750, 80))
        self.quarantine_widget.setAcceptDrops(False)
        self.quarantine_widget.setLayoutDirection(Qt.LeftToRight)
        self.quarantine_widget.setAutoFillBackground(False)
        self.quarantine_title = QLabel(self.quarantine_widget)
        self.quarantine_title.setObjectName(u"quarantine_title")
        self.quarantine_title.setGeometry(QRect(10, 10, 500, 30))
        self.quarantine_title.setFont(font5)
        self.quarantine_title.setLayoutDirection(Qt.LeftToRight)
        self.quarantine_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.quarantine_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.quarantine_text = QLabel(self.quarantine_widget)
        self.quarantine_text.setObjectName(u"quarantine_text")
        self.quarantine_text.setGeometry(QRect(10, 50, 500, 20))
        self.quarantine_text.setFont(font)
        self.quarantine_text.setLayoutDirection(Qt.LeftToRight)
        self.quarantine_text.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.quarantine_text.setScaledContents(False)
        self.quarantine_text.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.quarantine_text.setWordWrap(False)
        self.quarantine_button = QPushButton(self.quarantine_widget)
        self.quarantine_button.setObjectName(u"quarantine_button")
        self.quarantine_button.setGeometry(QRect(660, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.quarantine_button.sizePolicy().hasHeightForWidth())
        self.quarantine_button.setSizePolicy(sizePolicy1)
        self.quarantine_button.setFont(font)
        self.quarantine_button.setFocusPolicy(Qt.StrongFocus)
        self.quarantine_button.setLayoutDirection(Qt.LeftToRight)
        self.quarantine_button.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.quarantine_button.setIconSize(QSize(16, 16))
        self.quarantine_button.setCheckable(False)
        self.quarantine_button_2 = QPushButton(self.quarantine_widget)
        self.quarantine_button_2.setObjectName(u"quarantine_button_2")
        self.quarantine_button_2.setGeometry(QRect(570, 20, 80, 30))
        sizePolicy1.setHeightForWidth(self.quarantine_button_2.sizePolicy().hasHeightForWidth())
        self.quarantine_button_2.setSizePolicy(sizePolicy1)
        self.quarantine_button_2.setFont(font)
        self.quarantine_button_2.setFocusPolicy(Qt.StrongFocus)
        self.quarantine_button_2.setLayoutDirection(Qt.LeftToRight)
        self.quarantine_button_2.setStyleSheet(u"QPushButton { background-color: rgb(235, 235, 235); color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        self.quarantine_button_2.setIconSize(QSize(16, 16))
        self.quarantine_button_2.setCheckable(False)
        self.home_window = QWidget(self.main_widget)
        self.home_window.setObjectName(u"home_window")
        self.home_window.setGeometry(QRect(80, 60, 810, 520))
        self.home_window.setFont(font6)
        self.home_window.setLayoutDirection(Qt.LeftToRight)
        self.home_window.setStyleSheet(u"QWidget{ background-color: rgb(255, 255, 255); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 10px; }\n"
"")
        self.log_widget = QWidget(self.home_window)
        self.log_widget.setObjectName(u"log_widget")
        self.log_widget.setGeometry(QRect(30, 260, 750, 240))
        self.log_widget.setAcceptDrops(False)
        self.log_widget.setLayoutDirection(Qt.LeftToRight)
        self.log_widget.setAutoFillBackground(False)
        self.log_widget.setStyleSheet(u"")
        self.log_text = QTextEdit(self.log_widget)
        self.log_text.setObjectName(u"log_text")
        self.log_text.setGeometry(QRect(10, 10, 730, 220))
        font7 = QFont()
        font7.setFamilies([u"Microsoft YaHei"])
        font7.setPointSize(9)
        font7.setBold(False)
        font7.setItalic(False)
        font7.setStrikeOut(False)
        font7.setKerning(True)
        font7.setStyleStrategy(QFont.PreferAntialias)
        self.log_text.setFont(font7)
        self.log_text.setLayoutDirection(Qt.LeftToRight)
        self.log_text.setAutoFillBackground(False)
        self.log_text.setStyleSheet(u"QTextEdit { background-color: transparent; color: rgb(0, 0, 0); border: 1px solid rgb(235, 235, 235); border-radius: 10px; outline: none; } QTextEdit QScrollBar:vertical { background: transparent; width: 6px; margin: 0px; } QTextEdit QScrollBar::handle:vertical { background: rgb(200, 200, 200); border-radius: 3px; min-height: 20px; } QTextEdit QScrollBar:horizontal { background: transparent; height: 6px; margin: 0px; } QTextEdit QScrollBar::handle:horizontal { background: rgb(200, 200, 200); border-radius: 3px; min-width: 20px; } QTextEdit QScrollBar::handle:hover { background: rgb(180, 180, 180); } QTextEdit QScrollBar::add-line, QTextEdit QScrollBar::sub-line { width: 0px; height: 0px; } QTextEdit QScrollBar::add-page, QTextEdit QScrollBar::sub-page { background: transparent; }\n"
"")
        self.log_text.setFrameShape(QFrame.StyledPanel)
        self.log_text.setFrameShadow(QFrame.Sunken)
        self.log_text.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.log_text.setSizeAdjustPolicy(QAbstractScrollArea.AdjustIgnored)
        self.log_text.setUndoRedoEnabled(True)
        self.log_text.setTextInteractionFlags(Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)
        self.state_widget = QWidget(self.home_window)
        self.state_widget.setObjectName(u"state_widget")
        self.state_widget.setGeometry(QRect(30, 20, 750, 240))
        self.state_widget.setAcceptDrops(False)
        self.state_widget.setLayoutDirection(Qt.LeftToRight)
        self.state_widget.setAutoFillBackground(False)
        self.state_widget.setStyleSheet(u"")
        self.state_title = QLabel(self.state_widget)
        self.state_title.setObjectName(u"state_title")
        self.state_title.setGeometry(QRect(10, 200, 730, 30))
        font8 = QFont()
        font8.setFamilies([u"Microsoft YaHei"])
        font8.setPointSize(14)
        font8.setBold(True)
        font8.setStyleStrategy(QFont.PreferAntialias)
        self.state_title.setFont(font8)
        self.state_title.setLayoutDirection(Qt.LeftToRight)
        self.state_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.state_title.setAlignment(Qt.AlignCenter)
        self.state_icon = QLabel(self.state_widget)
        self.state_icon.setObjectName(u"state_icon")
        self.state_icon.setGeometry(QRect(285, 10, 180, 180))
        sizePolicy.setHeightForWidth(self.state_icon.sizePolicy().hasHeightForWidth())
        self.state_icon.setSizePolicy(sizePolicy)
        self.state_icon.setMinimumSize(QSize(0, 171))
        self.state_icon.setMaximumSize(QSize(16777215, 16777215))
        font9 = QFont()
        font9.setFamilies([u"Microsoft YaHei"])
        font9.setPointSize(10)
        font9.setStrikeOut(False)
        font9.setKerning(True)
        font9.setStyleStrategy(QFont.PreferAntialias)
        self.state_icon.setFont(font9)
        self.state_icon.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.state_icon.setLayoutDirection(Qt.LeftToRight)
        self.state_icon.setStyleSheet(u"")
        self.state_icon.setFrameShape(QFrame.NoFrame)
        self.state_icon.setLineWidth(1)
        self.state_icon.setTextFormat(Qt.AutoText)
        self.state_icon.setPixmap(QPixmap(u":/icon/state_icon_black.png"))
        self.state_icon.setScaledContents(True)
        self.state_icon.setAlignment(Qt.AlignCenter)
        self.navigate_window = QWidget(self.main_widget)
        self.navigate_window.setObjectName(u"navigate_window")
        self.navigate_window.setGeometry(QRect(10, 10, 880, 50))
        self.navigate_window.setFont(font)
        self.navigate_window.setLayoutDirection(Qt.LeftToRight)
        self.navigate_window.setStyleSheet(u"QWidget{ background-color: rgb(245, 245, 245); border-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; }\n"
"")
        self.close_button = QPushButton(self.navigate_window)
        self.close_button.setObjectName(u"close_button")
        self.close_button.setGeometry(QRect(840, 10, 30, 30))
        sizePolicy1.setHeightForWidth(self.close_button.sizePolicy().hasHeightForWidth())
        self.close_button.setSizePolicy(sizePolicy1)
        self.close_button.setFont(font)
        self.close_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.close_button.setFocusPolicy(Qt.StrongFocus)
        self.close_button.setLayoutDirection(Qt.LeftToRight)
        self.close_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(250, 250, 250); }\n"
"")
        icon1 = QIcon()
        icon1.addFile(u":/icon/close_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.close_button.setIcon(icon1)
        self.close_button.setIconSize(QSize(16, 16))
        self.close_button.setCheckable(False)
        self.minimize_button = QPushButton(self.navigate_window)
        self.minimize_button.setObjectName(u"minimize_button")
        self.minimize_button.setGeometry(QRect(805, 10, 30, 30))
        sizePolicy1.setHeightForWidth(self.minimize_button.sizePolicy().hasHeightForWidth())
        self.minimize_button.setSizePolicy(sizePolicy1)
        self.minimize_button.setFont(font)
        self.minimize_button.setFocusPolicy(Qt.StrongFocus)
        self.minimize_button.setLayoutDirection(Qt.LeftToRight)
        self.minimize_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(250, 250, 250); }\n"
"")
        icon2 = QIcon()
        icon2.addFile(u":/icon/minimize_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.minimize_button.setIcon(icon2)
        self.minimize_button.setIconSize(QSize(16, 16))
        self.minimize_button.setCheckable(False)
        self.navigate_title = QLabel(self.navigate_window)
        self.navigate_title.setObjectName(u"navigate_title")
        self.navigate_title.setGeometry(QRect(15, 10, 500, 30))
        self.navigate_title.setFont(font4)
        self.navigate_title.setLayoutDirection(Qt.LeftToRight)
        self.navigate_title.setStyleSheet(u"QLabel { background-color: transparent; color: rgb(0, 0, 0); }\n"
"")
        self.navigate_title.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.about_button = QPushButton(self.navigate_window)
        self.about_button.setObjectName(u"about_button")
        self.about_button.setGeometry(QRect(770, 10, 30, 30))
        sizePolicy1.setHeightForWidth(self.about_button.sizePolicy().hasHeightForWidth())
        self.about_button.setSizePolicy(sizePolicy1)
        self.about_button.setFont(font)
        self.about_button.setFocusPolicy(Qt.StrongFocus)
        self.about_button.setLayoutDirection(Qt.LeftToRight)
        self.about_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(250, 250, 250); }\n"
"")
        icon3 = QIcon()
        icon3.addFile(u":/icon/about_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.about_button.setIcon(icon3)
        self.about_button.setIconSize(QSize(16, 16))
        self.about_button.setCheckable(False)
        self.options_window = QWidget(self.main_widget)
        self.options_window.setObjectName(u"options_window")
        self.options_window.setGeometry(QRect(10, 60, 70, 520))
        self.options_window.setFont(font)
        self.options_window.setLayoutDirection(Qt.LeftToRight)
        self.options_window.setStyleSheet(u"QWidget{ background-color: rgb(235, 235, 235); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 10px; border-bottom-right-radius: 0px; }\n"
"")
        self.setting_button = QPushButton(self.options_window)
        self.setting_button.setObjectName(u"setting_button")
        self.setting_button.setGeometry(QRect(10, 460, 50, 50))
        sizePolicy1.setHeightForWidth(self.setting_button.sizePolicy().hasHeightForWidth())
        self.setting_button.setSizePolicy(sizePolicy1)
        self.setting_button.setFont(font6)
        self.setting_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.setting_button.setFocusPolicy(Qt.StrongFocus)
        self.setting_button.setLayoutDirection(Qt.LeftToRight)
        self.setting_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        icon4 = QIcon()
        icon4.addFile(u":/icon/setting_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.setting_button.setIcon(icon4)
        self.setting_button.setIconSize(QSize(20, 20))
        self.setting_button.setCheckable(False)
        self.protect_button = QPushButton(self.options_window)
        self.protect_button.setObjectName(u"protect_button")
        self.protect_button.setGeometry(QRect(10, 190, 50, 50))
        sizePolicy1.setHeightForWidth(self.protect_button.sizePolicy().hasHeightForWidth())
        self.protect_button.setSizePolicy(sizePolicy1)
        self.protect_button.setFont(font6)
        self.protect_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.protect_button.setFocusPolicy(Qt.StrongFocus)
        self.protect_button.setLayoutDirection(Qt.LeftToRight)
        self.protect_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        icon5 = QIcon()
        icon5.addFile(u":/icon/protect_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.protect_button.setIcon(icon5)
        self.protect_button.setIconSize(QSize(20, 20))
        self.protect_button.setCheckable(False)
        self.scan_button = QPushButton(self.options_window)
        self.scan_button.setObjectName(u"scan_button")
        self.scan_button.setGeometry(QRect(10, 70, 50, 50))
        sizePolicy1.setHeightForWidth(self.scan_button.sizePolicy().hasHeightForWidth())
        self.scan_button.setSizePolicy(sizePolicy1)
        self.scan_button.setFont(font6)
        self.scan_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.scan_button.setFocusPolicy(Qt.StrongFocus)
        self.scan_button.setLayoutDirection(Qt.LeftToRight)
        self.scan_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        icon6 = QIcon()
        icon6.addFile(u":/icon/scan_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.scan_button.setIcon(icon6)
        self.scan_button.setIconSize(QSize(20, 20))
        self.scan_button.setCheckable(False)
        self.tool_button = QPushButton(self.options_window)
        self.tool_button.setObjectName(u"tool_button")
        self.tool_button.setGeometry(QRect(10, 130, 50, 50))
        sizePolicy1.setHeightForWidth(self.tool_button.sizePolicy().hasHeightForWidth())
        self.tool_button.setSizePolicy(sizePolicy1)
        self.tool_button.setFont(font6)
        self.tool_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.tool_button.setFocusPolicy(Qt.StrongFocus)
        self.tool_button.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.tool_button.setToolTipDuration(-7)
        self.tool_button.setLayoutDirection(Qt.LeftToRight)
        self.tool_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        icon7 = QIcon()
        icon7.addFile(u":/icon/tool_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.tool_button.setIcon(icon7)
        self.tool_button.setIconSize(QSize(20, 20))
        self.tool_button.setCheckable(False)
        self.home_button = QPushButton(self.options_window)
        self.home_button.setObjectName(u"home_button")
        self.home_button.setGeometry(QRect(10, 10, 50, 50))
        sizePolicy1.setHeightForWidth(self.home_button.sizePolicy().hasHeightForWidth())
        self.home_button.setSizePolicy(sizePolicy1)
        self.home_button.setFont(font6)
        self.home_button.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.home_button.setFocusPolicy(Qt.StrongFocus)
        self.home_button.setLayoutDirection(Qt.LeftToRight)
        self.home_button.setStyleSheet(u"QPushButton { background-color: transparent; color: rgb(0, 0, 0); border-radius: 10px; } QPushButton:hover { background-color: rgb(240, 240, 240); }\n"
"")
        icon8 = QIcon()
        icon8.addFile(u":/icon/home_black.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.home_button.setIcon(icon8)
        self.home_button.setIconSize(QSize(20, 20))
        self.home_button.setCheckable(False)
        main_window.setCentralWidget(self.main_widget)
        self.about_window.raise_()
        self.scan_window.raise_()
        self.protect_window.raise_()
        self.blank_window.raise_()
        self.tool_window.raise_()
        self.taskmgr_window.raise_()
        self.setting_window.raise_()
        self.home_window.raise_()
        self.navigate_window.raise_()
        self.options_window.raise_()

        self.retranslateUi(main_window)

        QMetaObject.connectSlotsByName(main_window)
    # setupUi

    def retranslateUi(self, main_window):
        main_window.setWindowTitle(QCoreApplication.translate("main_window", u"PYAS", None))
        self.file_button.setText(QCoreApplication.translate("main_window", u"\u6a94\u6848", None))
        self.path_button.setText(QCoreApplication.translate("main_window", u"\u8def\u5f91", None))
        self.full_button.setText(QCoreApplication.translate("main_window", u"\u5168\u76e4", None))
        self.method_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.progress_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u9078\u64c7\u6383\u63cf\u65b9\u5f0f", None))
        self.progress_title.setText(QCoreApplication.translate("main_window", u"\u75c5\u6bd2\u6383\u63cf", None))
        self.stop_button.setText(QCoreApplication.translate("main_window", u"\u505c\u6b62", None))
        self.solve_button.setText(QCoreApplication.translate("main_window", u"\u522a\u9664", None))
        self.info_title.setText(QCoreApplication.translate("main_window", u"\u9032\u7a0b\u7e3d\u6578 :", None))
        self.info_text.setHtml(QCoreApplication.translate("main_window", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>", None))
        self.sensitive_title.setText(QCoreApplication.translate("main_window", u"\u589e\u5f37\u6a21\u5f0f", None))
        self.sensitive_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u589e\u5f37\u6383\u63cf\u5f15\u64ce", None))
        self.sensitive_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.language_title.setText(QCoreApplication.translate("main_window", u"\u986f\u793a\u8a9e\u8a00", None))
        self.language_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u9078\u64c7\u986f\u793a\u8a9e\u8a00", None))
        self.simplified_switch.setText(QCoreApplication.translate("main_window", u"\u7b80\u4f53\u4e2d\u6587", None))
        self.traditional_switch.setText(QCoreApplication.translate("main_window", u"\u7e41\u9ad4\u4e2d\u6587", None))
        self.english_switch.setText(QCoreApplication.translate("main_window", u"English", None))
        self.extension_title.setText(QCoreApplication.translate("main_window", u"\u64f4\u5c55\u5f15\u64ce", None))
        self.extension_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u4f7f\u7528\u64f4\u5c55\u5f15\u64ce", None))
        self.extension_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.theme_title.setText(QCoreApplication.translate("main_window", u"\u986f\u8272\u4e3b\u984c", None))
        self.theme_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u9078\u64c7\u4e3b\u984c\u984f\u8272", None))
        self.blue_switch.setText(QCoreApplication.translate("main_window", u"\u85cd\u8272\u4e3b\u984c", None))
        self.yellow_switch.setText(QCoreApplication.translate("main_window", u"\u9ec3\u8272\u4e3b\u984c", None))
        self.red_switch.setText(QCoreApplication.translate("main_window", u"\u7d05\u8272\u4e3b\u984c", None))
        self.green_switch.setText(QCoreApplication.translate("main_window", u"\u7da0\u8272\u4e3b\u984c", None))
        self.black_switch.setText(QCoreApplication.translate("main_window", u"\u9ed1\u8272\u4e3b\u984c", None))
        self.white_switch.setText(QCoreApplication.translate("main_window", u"\u767d\u8272\u4e3b\u984c", None))
        self.cloud_title.setText(QCoreApplication.translate("main_window", u"\u96f2\u7aef\u670d\u52d9", None))
        self.cloud_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u4e0a\u5831\u96f2\u7aef\u5f15\u64ce", None))
        self.cloud_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.reset_title.setText(QCoreApplication.translate("main_window", u"\u91cd\u7f6e\u9078\u9805", None))
        self.reset_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u91cd\u7f6e\u6240\u6709\u8a2d\u5b9a", None))
        self.reset_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.update_title.setText(QCoreApplication.translate("main_window", u"\u6aa2\u67e5\u66f4\u65b0", None))
        self.update_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6aa2\u67e5\u53ef\u7528\u66f4\u65b0", None))
        self.update_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.website_title.setText(QCoreApplication.translate("main_window", u"\u5b98\u65b9\u7db2\u7ad9", None))
        self.website_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u524d\u5f80\u5b98\u65b9\u7db2\u7ad9", None))
        self.website_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.product_title.setText(QCoreApplication.translate("main_window", u"\u7522\u54c1\u91d1\u9470", None))
        self.product_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u555f\u7528\u7522\u54c1\u91d1\u9470", None))
        self.product_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.license_text.setHtml(QCoreApplication.translate("main_window", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'Microsoft YaHei'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">PYAS Security Software Development License Agreement</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Last updated: 2025-08-15</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1. License &amp; Ownership</p>\n"
"<p style=\" margin-top:0px; ma"
                        "rgin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 A single device key may be required to activate the software or source code.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Non exclusive, non transferable, and for personal, internal use only.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 87owo reserves all rights. Intellectual property rights are not transferred.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2. Use &amp; Prohibitions</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent"
                        ":0; text-indent:0px;\">   \u2013 Private redistribution, sublicensing, or rental is prohibited.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Private reverse engineering or removal of notices is prohibited.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Any of the above requires prior authorization from the original author.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Only personal internal use or modification of the source code is permitted.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Use of the software or source code for any illegal purpose is prohibited.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin"
                        "-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">3. License Components</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 All project script archives and executable files are proprietary.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4. Updates &amp; Terms</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Updates to new versions may include patches, enhancements, or modifications.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-lef"
                        "t:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 Continued use constitutes your acceptance of these features or terms.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">5. Warranty &amp; Liability</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 This software is provided &quot;as is,&quot; without warranty of any kind.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">   \u2013 In no event shall there be any liability for consequential damages.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-in"
                        "dent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">\u00a9 2020\u20132025 87owo (PYAS Security). All rights reserved.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>", None))
        self.process_title.setText(QCoreApplication.translate("main_window", u"\u9032\u7a0b\u9632\u8b77", None))
        self.process_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6514\u622a\u9032\u7a0b\u75c5\u6bd2", None))
        self.process_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.document_title.setText(QCoreApplication.translate("main_window", u"\u6a94\u6848\u9632\u8b77", None))
        self.document_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6514\u622a\u6a94\u6848\u8b8a\u66f4", None))
        self.document_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.system_title.setText(QCoreApplication.translate("main_window", u"\u7cfb\u7d71\u9632\u8b77", None))
        self.system_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6514\u622a\u7cfb\u7d71\u9805\u76ee", None))
        self.system_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.driver_title.setText(QCoreApplication.translate("main_window", u"\u9a45\u52d5\u9632\u8b77", None))
        self.driver_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u589e\u5f37\u81ea\u8eab\u9632\u8b77", None))
        self.driver_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.network_title.setText(QCoreApplication.translate("main_window", u"\u7db2\u8def\u9632\u8b77", None))
        self.network_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6514\u622a\u7db2\u8def\u901a\u8a0a", None))
        self.network_switch.setText(QCoreApplication.translate("main_window", u"\u95dc\u9589", None))
        self.custom_title.setText(QCoreApplication.translate("main_window", u"\u81ea\u8a02\u9632\u8b77", None))
        self.custom_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u5c0e\u5165\u81ea\u8a02\u9632\u8b77", None))
        self.custom_button.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0", None))
        self.custom_button_2.setText(QCoreApplication.translate("main_window", u"\u79fb\u9664", None))
        self.taskmgr_title.setText(QCoreApplication.translate("main_window", u"\u9032\u7a0b\u7ba1\u7406", None))
        self.taskmgr_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u5be6\u6642\u67e5\u770b\u7cfb\u7d71\u9032\u7a0b", None))
        self.taskmgr_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.clean_title.setText(QCoreApplication.translate("main_window", u"\u5783\u573e\u6e05\u7406", None))
        self.clean_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u6e05\u7406\u66ab\u5b58\u5783\u573e\u6a94\u6848", None))
        self.clean_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.repair_title.setText(QCoreApplication.translate("main_window", u"\u7cfb\u7d71\u4fee\u5fa9", None))
        self.repair_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u4fee\u5fa9\u7cfb\u7d71\u8a3b\u518a\u9805\u76ee", None))
        self.repair_button.setText(QCoreApplication.translate("main_window", u"\u9078\u64c7", None))
        self.popup_title.setText(QCoreApplication.translate("main_window", u"\u5f48\u7a97\u6514\u622a", None))
        self.popup_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u9078\u64c7\u6307\u5b9a\u7a97\u53e3\u6514\u622a", None))
        self.popup_button.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0", None))
        self.popup_button_2.setText(QCoreApplication.translate("main_window", u"\u79fb\u9664", None))
        self.whitelist_title.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0\u767d\u540d\u55ae", None))
        self.whitelist_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u589e\u52a0\u6a94\u6848\u5230\u767d\u540d\u55ae", None))
        self.whitelist_button.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0", None))
        self.whitelist_button_2.setText(QCoreApplication.translate("main_window", u"\u79fb\u9664", None))
        self.quarantine_title.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0\u9694\u96e2\u5340", None))
        self.quarantine_text.setText(QCoreApplication.translate("main_window", u"\u6b64\u9078\u9805\u53ef\u4ee5\u589e\u52a0\u6a94\u6848\u5230\u9694\u96e2\u5340", None))
        self.quarantine_button.setText(QCoreApplication.translate("main_window", u"\u589e\u52a0", None))
        self.quarantine_button_2.setText(QCoreApplication.translate("main_window", u"\u79fb\u9664", None))
        self.log_text.setHtml(QCoreApplication.translate("main_window", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'Microsoft YaHei'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>", None))
        self.state_title.setText(QCoreApplication.translate("main_window", u"\u6b64\u88dd\u7f6e\u5df2\u53d7\u5230\u9632\u8b77", None))
#if QT_CONFIG(tooltip)
        self.state_icon.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.state_icon.setText("")
        self.close_button.setText("")
        self.minimize_button.setText("")
        self.navigate_title.setText(QCoreApplication.translate("main_window", u"PYAS Security", None))
        self.about_button.setText("")
        self.setting_button.setText("")
        self.protect_button.setText("")
        self.scan_button.setText("")
        self.tool_button.setText("")
        self.home_button.setText("")
    # retranslateUi

